{"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;;;;;;;;AAsBD,SAAS,iCAAW,KAAsB,EAAE,GAAiC;IAC3E,QAAQ,CAAA,GAAA,uBAAe,EAAE;IACzB,IAAI,SAAC,KAAK,EAAC,GAAG,CAAA,GAAA,kBAAU;IACxB,IAAI,aAAC,SAAS,cAAE,UAAU,WAAE,OAAO,EAAC,GAAG;IACvC,IAAI,SAAS,CAAA,GAAA,sBAAc,EAAE;IAC7B;;;GAGC,GACD,IAAI,eAAC,WAAW,aAAE,SAAS,EAAC,GAAG,CAAA,GAAA,gBAAQ,EAAE;QAAC,GAAG,KAAK;QAAE,aAAa;IAAK,GAAG;IACzE,IAAI,cAAC,UAAU,aAAE,SAAS,EAAC,GAAG,CAAA,GAAA,eAAO,EAAE;IACvC,qBACE,gCAAC,CAAA,GAAA,gBAAQ;QAAE,gBAAgB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,yDAAW,GAAG;qBAClD,gCAAC;QACC,WACE,CAAA,GAAA,iBAAS,EACP,CAAA,GAAA,yDAAW,GACX,2BACA;YACE,mCAAmC,cAAc;YACjD,qCAAqC,cAAc;YACnD,oCAAoC;YACpC,cAAc;YACd,aAAa;YACb,eAAe;QACjB;QAGH,GAAG,CAAA,GAAA,iBAAS,EAAE,YAAY,YAAY;QACvC,KAAK;OACJ,cAAc,QAAQ,UAAU,yBAC/B,gCAAC,CAAA,GAAA,+BAAE;QAAE,kBAAkB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,yDAAW,GAAG,gCAAgC;QAAgC,MAAK;QAEtH,cAAc,QAAQ,UAAU,0BAC/B,gCAAC,CAAA,GAAA,oCAAa;QAAE,kBAAkB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,yDAAW,GAAG,gCAAgC;QAE5F,cAAc,UAAU,UAAU,yBACjC,gCAAC,CAAA,GAAA,kCAAK;QAAE,kBAAkB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,yDAAW,GAAG,gCAAgC;QAAkC,MAAK;QAE3H,cAAc,UAAU,UAAU,0BACjC,gCAAC,CAAA,GAAA,sCAAe;QAAE,kBAAkB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,yDAAW,GAAG,gCAAgC;;AAKvG;AAEA;;CAEC,GACD,IAAI,0DAAc,CAAA,GAAA,YAAI,EAAE,UAAU,CAAC","sources":["packages/@react-spectrum/numberfield/src/StepButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport Add from '@spectrum-icons/workflow/Add';\nimport {AriaButtonProps} from '@react-types/button';\nimport ChevronDownSmall from '@spectrum-icons/ui/ChevronDownSmall';\nimport ChevronUpSmall from '@spectrum-icons/ui/ChevronUpSmall';\nimport {classNames, useFocusableRef} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport Remove from '@spectrum-icons/workflow/Remove';\nimport stepperStyle from '@adobe/spectrum-css-temp/components/stepper/vars.css';\nimport {useButton} from '@react-aria/button';\nimport {useHover} from '@react-aria/interactions';\nimport {useProvider, useProviderProps} from '@react-spectrum/provider';\n\ninterface StepButtonProps extends AriaButtonProps {\n  isQuiet?: boolean,\n  direction: 'up' | 'down'\n}\n\nfunction StepButton(props: StepButtonProps, ref: FocusableRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  let {scale} = useProvider();\n  let {direction, isDisabled, isQuiet} = props;\n  let domRef = useFocusableRef(ref);\n  /**\n   * Must use div for now because Safari pointer event bugs on disabled form elements.\n   * Link https://bugs.webkit.org/show_bug.cgi?id=219188.\n   */\n  let {buttonProps, isPressed} = useButton({...props, elementType: 'div'}, domRef);\n  let {hoverProps, isHovered} = useHover(props);\n  return (\n    <FocusRing focusRingClass={classNames(stepperStyle, 'focus-ring')}>\n      <div\n        className={\n          classNames(\n            stepperStyle,\n            'spectrum-Stepper-button',\n            {\n              'spectrum-Stepper-button--stepUp': direction === 'up',\n              'spectrum-Stepper-button--stepDown': direction === 'down',\n              'spectrum-Stepper-button--isQuiet': isQuiet,\n              'is-hovered': isHovered,\n              'is-active': isPressed,\n              'is-disabled': isDisabled\n            }\n          )\n        }\n        {...mergeProps(hoverProps, buttonProps)}\n        ref={domRef}>\n        {direction === 'up' && scale === 'large' &&\n          <Add UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon')} size=\"S\" />\n        }\n        {direction === 'up' && scale === 'medium' &&\n          <ChevronUpSmall UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepUpIcon')} />\n        }\n        {direction === 'down' && scale === 'large' &&\n          <Remove UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon')} size=\"S\" />\n        }\n        {direction === 'down' && scale === 'medium' &&\n          <ChevronDownSmall UNSAFE_className={classNames(stepperStyle, 'spectrum-Stepper-button-icon', 'spectrum-Stepper-stepDownIcon')} />\n        }\n      </div>\n    </FocusRing>\n  );\n}\n\n/**\n * Buttons for NumberField.\n */\nlet _StepButton = React.forwardRef(StepButton) as (props: StepButtonProps & {ref?: FocusableRef<HTMLDivElement>}) => ReactElement;\nexport {_StepButton as StepButton};\n"],"names":[],"version":3,"file":"StepButton.module.js.map"}