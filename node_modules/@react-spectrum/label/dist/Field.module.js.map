{"mappings":"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","sources":["packages/@react-spectrum/label/src/Field.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, SlotProvider, useStyleProps} from '@react-spectrum/utils';\nimport {Flex} from '@react-spectrum/layout';\nimport {HelpText} from './HelpText';\nimport {Label} from './Label';\nimport {LabelPosition, RefObject} from '@react-types/shared';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport React, {ReactNode, Ref} from 'react';\nimport {SpectrumFieldProps} from '@react-types/label';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction Field(props: SpectrumFieldProps, ref: Ref<HTMLElement>) {\n  let formProps = useFormProps(props);\n  let isInForm = formProps !== props;\n  props = formProps;\n  let {\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    isRequired,\n    necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName,\n    validationState,\n    isInvalid,\n    description,\n    errorMessage = e => e.validationErrors.join(' '),\n    validationErrors,\n    validationDetails,\n    isDisabled,\n    showErrorIcon,\n    contextualHelp,\n    children,\n    labelProps = {},\n    // Not every component that uses <Field> supports help text.\n    descriptionProps = {},\n    errorMessageProps = {},\n    elementType,\n    wrapperClassName,\n    wrapperProps = {},\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let errorMessageString: ReactNode = null;\n  if (typeof errorMessage === 'function') {\n    errorMessageString = isInvalid != null && validationErrors != null && validationDetails != null\n      ? errorMessage({\n        isInvalid,\n        validationErrors,\n        validationDetails\n      })\n      : null;\n  } else {\n    errorMessageString = errorMessage;\n  }\n  let hasHelpText = !!description || errorMessageString && (isInvalid || validationState === 'invalid');\n  let contextualHelpId = useId();\n\n  let fallbackLabelPropsId = useId();\n  if (label && contextualHelp && !labelProps.id) {\n    labelProps.id = fallbackLabelPropsId;\n  }\n\n  let labelWrapperClass = classNames(\n      labelStyles,\n      'spectrum-Field',\n    {\n      'spectrum-Field--positionTop': labelPosition === 'top',\n      'spectrum-Field--positionSide': labelPosition === 'side',\n      'spectrum-Field--alignEnd': labelAlign === 'end',\n      'spectrum-Field--hasContextualHelp': !!props.contextualHelp\n    },\n      styleProps.className,\n      wrapperClassName\n    );\n\n  children = React.cloneElement(children, mergeProps(children.props as any, {\n    className: classNames(\n        labelStyles,\n        'spectrum-Field-field'\n      )\n  }));\n\n  let renderHelpText = () => (\n    <HelpText\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      description={description}\n      errorMessage={errorMessageString}\n      validationState={validationState}\n      isInvalid={isInvalid}\n      isDisabled={isDisabled}\n      showErrorIcon={showErrorIcon}\n      gridArea={labelStyles.helpText} />\n    );\n\n  let renderChildren = () => {\n    if (labelPosition === 'side') {\n      return (\n        <Flex direction=\"column\" UNSAFE_className={classNames(labelStyles, 'spectrum-Field-wrapper')}>\n          {children}\n          {hasHelpText && renderHelpText()}\n        </Flex>\n      );\n    }\n\n    return (\n      <>\n        {children}\n        {hasHelpText && renderHelpText()}\n      </>\n    );\n  };\n\n  let labelAndContextualHelp = (\n    <>\n      {label && (\n        <Label\n          {...labelProps}\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          includeNecessityIndicatorInAccessibilityName={includeNecessityIndicatorInAccessibilityName}\n          elementType={elementType}>\n          {label}\n        </Label>\n      )}\n      {label && contextualHelp &&\n        <SlotProvider\n          slots={{\n            actionButton: {\n              UNSAFE_className: classNames(labelStyles, 'spectrum-Field-contextualHelp'),\n              id: contextualHelpId,\n              'aria-labelledby': labelProps?.id ? `${labelProps.id} ${contextualHelpId}` : undefined\n            }\n          }}>\n          {contextualHelp}\n        </SlotProvider>\n      }\n    </>\n    );\n\n    // Need to add an extra wrapper for the label and contextual help if labelPosition is side,\n    // so that the table layout works inside forms.\n  if (isInForm && labelPosition === 'side' && label && contextualHelp) {\n    labelAndContextualHelp = (\n      <div className={classNames(labelStyles, 'spectrum-Field-labelCell')}>\n        <div className={classNames(labelStyles, 'spectrum-Field-labelWrapper')}>\n          {labelAndContextualHelp}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    (<div\n      {...styleProps}\n      {...wrapperProps}\n      ref={ref as RefObject<HTMLDivElement | null>}\n      className={labelWrapperClass}>\n      {labelAndContextualHelp}\n      {renderChildren()}\n    </div>)\n  );\n}\n\nlet _Field = React.forwardRef(Field);\nexport {_Field as Field};\n"],"names":[],"version":3,"file":"Field.module.js.map"}