{"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;;;;;AAiBM,SAAS,0CAAe,KAAkC;IAC/D,IAAI,YACF,QAAQ,aACR,SAAS,cACT,UAAU,UACV,MAAM,EACP,GAAG;IAEJ,IAAI,aAAC,SAAS,EAAC,GAAG,CAAA,GAAA,gBAAQ;IAC1B,IAAI,MAAM,CAAA,GAAA,aAAK,EAAE;IACjB,IAAI,cAAiC,MAAM,IAAI,GAAG,MAAM;IACxD,IAAI,aAAC,SAAS,EAAC,GAAG,CAAA,GAAA,wBAAgB,EAAE;QAClC,GAAG,KAAK;QACR,aAAa;IACf,GAAG;IACH,IAAI,cAAC,UAAU,aAAE,SAAS,EAAC,GAAG,CAAA,GAAA,eAAO,EAAE;IAEvC,oEAAoE;IACpE,IAAI,QACF,YAAY,CAAC;IAGf,qBACE,gCAAC,CAAA,GAAA,eAAO,uBACN,gCAAC,CAAA,GAAA,gBAAQ;QAAE,gBAAgB,CAAA,GAAA,iBAAS,EAAE,CAAA,GAAA,4DAAK,GAAG;qBAC5C,gCAAC;QACE,GAAG,CAAA,GAAA,iBAAS,EAAE,WAAW,WAAW;QACrC,KAAK;QACL,WACE,CAAA,GAAA,iBAAS,EACP,CAAA,GAAA,4DAAK,GACL;YACE,iCAAiC,CAAC;YAClC,eAAe,CAAC,aAAa;YAC7B,cAAc;QAChB;OAGH,0BAGL,gCAAC,CAAA,GAAA,uCAAgB;QACf,kBACE,CAAA,GAAA,iBAAS,EACP,CAAA,GAAA,4DAAK,GACL,sCACA;YACE,eAAe,cAAc;QAC/B;;AAKZ","sources":["packages/@react-spectrum/breadcrumbs/src/BreadcrumbItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BreadcrumbItemProps} from '@react-types/breadcrumbs';\nimport ChevronRightSmall from '@spectrum-icons/ui/ChevronRightSmall';\nimport {classNames} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {Fragment, useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/breadcrumb/vars.css';\nimport {useBreadcrumbItem} from '@react-aria/breadcrumbs';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SpectrumBreadcrumbItemProps extends BreadcrumbItemProps {\n  isMenu?: boolean\n}\n\nexport function BreadcrumbItem(props: SpectrumBreadcrumbItemProps) {\n  let {\n    children,\n    isCurrent,\n    isDisabled,\n    isMenu\n  } = props;\n\n  let {direction} = useLocale();\n  let ref = useRef(null);\n  let ElementType: React.ElementType = props.href ? 'a' : 'span';\n  let {itemProps} = useBreadcrumbItem({\n    ...props,\n    elementType: ElementType\n  }, ref);\n  let {hoverProps, isHovered} = useHover(props);\n\n  // If this item contains a menu button, then it shouldn't be a link.\n  if (isMenu) {\n    itemProps = {};\n  }\n\n  return (\n    <Fragment>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n        <ElementType\n          {...mergeProps(itemProps, hoverProps)}\n          ref={ref}\n          className={\n            classNames(\n              styles,\n              {\n                'spectrum-Breadcrumbs-itemLink': !isMenu,\n                'is-disabled': !isCurrent && isDisabled,\n                'is-hovered': isHovered\n              }\n            )\n          }>\n          {children}\n        </ElementType>\n      </FocusRing>\n      <ChevronRightSmall\n        UNSAFE_className={\n          classNames(\n            styles,\n            'spectrum-Breadcrumbs-itemSeparator',\n            {\n              'is-reversed': direction === 'rtl'\n            }\n          )\n        } />\n    </Fragment>\n  );\n}\n"],"names":[],"version":3,"file":"BreadcrumbItem.module.js.map"}