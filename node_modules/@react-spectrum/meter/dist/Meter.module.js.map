{"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;AAUD,SAAS,4BAAM,KAAyB,EAAE,GAA2B;IACnE,IAAI,WAAC,UAAU,eAAe,GAAG,YAAW,GAAG;IAC/C,MAAM,cACJ,UAAU,cACV,UAAU,EACX,GAAG,CAAA,GAAA,eAAO,EAAE;IAEb,qBACE,gCAAC,CAAA,GAAA,sBAAc;QACZ,GAAG,UAAU;QACd,KAAK;QACL,UAAU;QACV,YAAY;QACZ,cACE,CAAA,GAAA,iBAAS,EACP,CAAA,GAAA,2DAAK,GACL;YACE,eAAe,YAAY;YAC3B,cAAc,YAAY;YAC1B,eAAe,YAAY;QAC7B;;AAIV;AAEA;;;CAGC,GACD,IAAI,0DAAS,CAAA,GAAA,YAAI,EAAE,UAAU,CAAC","sources":["packages/@react-spectrum/meter/src/Meter.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {ProgressBarBase} from '@react-spectrum/progress';\nimport React from 'react';\nimport {SpectrumMeterProps} from '@react-types/meter';\nimport styles from '@adobe/spectrum-css-temp/components/barloader/vars.css';\nimport {useMeter} from '@react-aria/meter';\n\nfunction Meter(props: SpectrumMeterProps, ref: DOMRef<HTMLDivElement>) {\n  let {variant = 'informative', ...otherProps} = props;\n  const {\n    meterProps,\n    labelProps\n  } = useMeter(props);\n\n  return (\n    <ProgressBarBase\n      {...otherProps}\n      ref={ref}\n      barProps={meterProps}\n      labelProps={labelProps}\n      barClassName={\n        classNames(\n          styles,\n          {\n            'is-positive': variant === 'positive',\n            'is-warning': variant === 'warning',\n            'is-critical': variant === 'critical'\n          }\n        )\n      } />\n  );\n}\n\n/**\n * Meters are visual representations of a quantity or an achievement.\n * Their progress is determined by user actions, rather than system actions.\n */\nlet _Meter = React.forwardRef(Meter);\nexport {_Meter as Meter};\n"],"names":[],"version":3,"file":"Meter.module.js.map"}