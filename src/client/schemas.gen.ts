// This file is auto-generated by @hey-api/openapi-ts

export const CreateAppointmentSchema = {
    properties: {
        customer_freeform_name: {
            type: 'string',
            title: 'Customer Freeform Name',
            examples: ['Bob']
        },
        customer_note: {
            type: 'string',
            title: 'Customer Note',
            examples: ["Men's haircut"]
        },
        appt_at_freeform: {
            type: 'string',
            title: 'Appt At Freeform',
            examples: ['Tomorrow at 10am']
        }
    },
    type: 'object',
    required: ['customer_freeform_name', 'customer_note', 'appt_at_freeform'],
    title: 'CreateAppointment'
} as const;

export const HTTPErrorSchema = {
    properties: {
        detail: {
            type: 'string',
            title: 'Detail'
        }
    },
    type: 'object',
    required: ['detail'],
    title: 'HTTPError'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const ReadAppointmentResponseSchema = {
    properties: {
        appointment_id: {
            type: 'integer',
            title: 'Appointment Id',
            examples: [1]
        },
        customer_freeform_name: {
            type: 'string',
            title: 'Customer Freeform Name',
            examples: ['Bob']
        },
        customer_note: {
            type: 'string',
            title: 'Customer Note',
            examples: ["Men's haircut"]
        },
        appt_at_freeform: {
            type: 'string',
            title: 'Appt At Freeform',
            examples: ['Tomorrow at 10am']
        }
    },
    type: 'object',
    required: ['appointment_id', 'customer_freeform_name', 'customer_note', 'appt_at_freeform'],
    title: 'ReadAppointmentResponse'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;